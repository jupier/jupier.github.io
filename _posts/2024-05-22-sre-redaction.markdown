---
title:  "L'importance de l'√©criture pour un Software Engineer"
date:   2024-05-22
excerpt: Plus tu vieillis, moins tu codes
---

# Mise en bouche ü´¶

Voil√† bient√¥t 10 ans que je travail en tant qu'ing√©nieur informatique (#SRE).
Mon poste √† beaucoup √©volu√© au fur et √† mesure des ann√©es et des entreprises 
pour lesquelles j'ai travaill√©.

Je suis actuellement ce qu'on appel un "Software Engineer Senior II" (je n'ai jamais
√©t√© tr√®s fan de cette d√©nomination).

Dans les premi√®res ann√©es, j'ai fait beaucoup de d√©veloppement (je pissais du code 
quoi), mais plus les ann√©es avances, plus la quantit√© de code que je produis 
diminue, plus la quantit√© de document que je r√©dige augmente.

Voici un article traitant de ce sujet. 

Evidemment cet article est tr√®s li√© √† mon personnel. L'analyse peut donc vari√©e 
d'une personne √† l'autre.

# C'est quoi un Software Engineer?

Quand tu sors de l'√©cole et que tu rejoins ta premi√®re entreprise, le plus souvent
tu vas beaucoup coder. Enfin c'est g√©n√©ralement ce que l'on attend de toi.

Des d√©veloppeurs avec plus d'exp√©rience sont a tes c√¥t√©s pour t'expliquer tes t√¢ches et 
tu ponds du code qui correspond √† ces attentes. 

Ces souvent tr√®s vari√©s. Ca peut aller √† faire du front, du back, de la base de donn√©es...etc.
En g√©n√©ral, cette phase est assez cool. Tu apprends beaucoup de nouvelles choses.

Plus les ann√©es avances, plus ton exp√©rience augmente, plus les t√¢ches que tu fais √©volues et 
se diversifient.

On te demande par exemple de leader un projet. Ce qui pourrait se traduire par r√©fl√©chir √† l'architecture
√† mettre en place et la faire valider, cr√©er les t√¢ches √† assigner aux diff√©rentes personnes, 
prendre des d√©cisions strat√©giques...etc.
En gros tu es garant de la mise en place de cette nouvelle fonctionnalit√©.

Au travers de toutes ces t√¢ches, ton expertise technique √©volue et tu es de plus en plus 
reconnue au sein de ton entreprise. Et tr√®s souvent tu fais de moins en moins de code et de 
plus en plus de document. La je ne parle pas forc√©ment de documentation, mais de document
en tout genre (du document d'architecture, des pr√©sentations, de la r√©daction de t√¢ches,
de la documentation...etc).

# Tu pisses de la doc'‚ÅâÔ∏è

Je ne dirais pas que je pisse de la doc'. Il est certains que la quantit√© de document
que je produis quotidiennement est bien plus importante qu'il y a 5 ans.

## Mais pourquoi? 

Simplement parce que je pense qu'on attend cela de moi. D'apr√®s les moeurs, un Software Engineer
'Senior' doit √™tre capable de r√©diger des documents clair et efficace afin de, par exemple,
de proposer une solution √† un probl√®me.

Aussi parce que je pense que √ßa en vaut la peine. Prenons le cas de n'importe quelle librairie en vogue.
Pensez vous que cet lib' serait aussi r√©pendue si elle n'avait pas une documentation √† la hauteur
qui en d√©crit ses fonctionnalit√©s? A mon sens, une documentation bien r√©dig√©e est tout aussi
difficile √† √©crire que le code quelle renferme.

Avec le temps, on appr√©cie apprendre √† √©crire. Ca peut para√Ætre b√™te, mais c'est une r√©alit√©.
La r√©daction ca s'apprend. Au d√©but, on cherche ses mots, les tournures des phrases ne sont pas
bonnes, on ne se relit pas. Avec le temps, on s'am√©liore, on se relit, on peaufine son
discours...etc. Et quand le texte nous convient, on est fier de soi. Le message est clair, pr√©cis.
Un peu comme quand on code ‚ò∫Ô∏è

De plus, maintenant avec ChatGPT, il est possible de produire un texte de qualit√© sans trop se prendre la 
t√™te.

## Imposteur!

Personnellement, cette tendance a d√©velopp√© en moi le ph√©nom√®ne de l'imposteur.

En effet, moins je code, moins j'ai l'impression d'√™tre en capacit√© d'en faire. Enfin c'est un ph√©nom√®ne
assez r√©pendu aujourd'hui, pas que dans le milieu de l'informatique.

## "Moi j'aime pas la doc'"!

Je pense avoir rencontr√© pas mal de d√©veloppeurs au cours de mes ann√©es d'exp√©rience. 
Certains n'aiment clairement pas √©crire des documents. J'avoue avoir √©t√© de cette cat√©gorie pendant un moment.

Mais la plupart des Staffs/Principals que j'ai pu c√¥toy√© √©taient √©videmment techniquement tr√®s bon,
mais aussi particuli√®rement √† l'aise avec la communication. Que ce soit √† l'√©crit, mais aussi √† l'oral.

Je ne me pr√©tends √©videmment pas dans cette cat√©gorie pour le moment (peut √™tre un jour). Simplement
pour assoir le fait que l'√©criture est √©videmment une pi√®ce particuli√®rement important dans la bo√Æte √†
l'outil d'un software engineer. 

# Quelques conseils pour √©crireüí°

Cette liste de conseils √† pour but d'√©voluer avec le temps, mes exp√©riences et vos commentaires. N'h√©sitez 
pas √† donner vos propres techniques dans les commentaires de ce post.

- Dump tes id√©es, les grandes lignes que tu as en t√™te; au d√©but, ne te prends pas la t√™te avec les fioritures,
√©cris tout ce qui te passe par la t√™te, m√™me si apr√®s coup ce sera supprim√©. Je trouve que c'est important 
pour se donner confiance en soi et se lancer dans la r√©daction. Ca fait peur de se retrouver devant une page
blanche. Autant la noircir un peu pour se donner un peu de courage, m√™me si c'est pas tr√®s bien √©crit.

- R√©diges ton document √©tape par √©tape; il est difficile de r√©diger quelque chose parfaitement du premier
coup. Fais un premier jet (par exemple avec uniquement le plan et quelques grandes lignes), sauvegarde le 
et retournes y le lendemain. Ca te permet d'y r√©fl√©chir de mani√®re asynchrone et de faire murir d'autres id√©es dans ton esprit

- N'h√©sites pas √† demander de l'aide ou une relecture; Comme quand tu √©cris du code, il est toujours int√©ressant
d'avoir un oeil ext√©rieur sur ce que tu fais.

- N'h√©sites pas √† utiliser ChatGPT

